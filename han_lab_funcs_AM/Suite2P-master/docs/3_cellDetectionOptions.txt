
clustModel --- what clustering model to use; "neuropil" is described in the paper, adds a neuropil contribution to each pixel individually. "standard" is plain clustering. 
neuropilSub --- for neuropil subtraction. "none" does not output a neuropil trace; "surround" estimates the signal in an annulus around the cell after ignoring all ROIs detected during optimization (even non-cells); "model" is described in the paper, uses spatial basis functions to estimate a smoothly-varying neuropil signal over the FOV and regresses this out simultaneously with the estimation of ROI responses. 
sig --- spatial smoothing constant: smooths out the SVDs spatially. Makes ROIs more cell-shaped. 
Nk0 --- starting the algorithm with this many clusters
Nk --- final annealed number of clusters (warning, due to the structure of the annealing process, one should have Nk0<3*Nk or else the code crashes. No need to make it larger anyway). 
nSVDforROI --- how many SVD components to keep for clustering. Usually ~ the number of expected cells (Nk). 
ShowCellMap --- whether to show the clustering results as an image every 10 iterations of the clustering
niterclustering --- how many iterations of clustering
getROIs --- whether to run the ROI detection algorithm after registration

SVD options

NavgFramesSVD --- for SVD, data has to be temporally binned. This number specifies the final number of points to be obtained after binning. In other words, datasets with many timepoints are binned in higher windows while small dataset are binned less. 
getSVDcomps --- whether to obtain and save to disk SVD components of the registered movies. Useful for pixel-level analysis and for checking the quality of the registration (residual motion will show up as SVD components). This is a separate SVD decomposition from that done for cell clustering (does not remove a running baseline of each pixel). 
nSVD --- how many SVD components to keep.