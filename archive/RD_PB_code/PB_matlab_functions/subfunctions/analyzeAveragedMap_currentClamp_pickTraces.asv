function [map selectedTrace] =analyzeAveragedMap_currentClamp_pickTraces(map,varargin) %%% AM 4/7/15 added varargin to allow for plot scale bar size in mV

%%% last edited 8/29/15 on recording comp
%%%%%%% edited by AM to not threshold amplitude values (set threshold arbitrarily high)
%%% %%% see line 49

% Analyses a single map (usually a mean maP and returns arrays with the
% results and plots of traces and the analysis.
%   LTP 2006
% MH 20100406

[rows, numTraces] = size(map.averageMap);
sr=map.samplingRate;

%2009-11-05 for filtering AP
filter_flag = 0;freq = 100;sampleRate = 10000;
if filter_flag
    [b,a] = butter(4,freq*2/sampleRate,'low');
    Hd = dfilt.df2t(b,a);
    for i = 1:size(map.averageMap,2)
        map.averageMap(:,i) = filter(Hd,map.averageMap(:,i))';
    end
end

baselineStartIndex = 1;
baselineEndIndex = 999;

%SET: STIMULUS 'ON' TIME
%SET: OTHER PARAMETERS FOR RESPONSE ONSET AND SYN RESPONSE

%stimOnInd=1000; %<--------------1000!
%responseOnsetEnd=1230;
%synEndInd=1750;
%chargeEndInd=2500;

stimOnInd=1000; %<--------------1000!
responseOnsetEnd=1150;
synEndInd=1750;
chargeEndInd=2500;

baselineMedians = median(map.averageMap(1:999,:));
baselineSDs = std(map.averageMap(baselineStartIndex:baselineEndIndex,:));
SD=mean(baselineSDs);

% THRESHOLDS ****************************************************************
% NB: these are vectors

dirLevel=3; %<---------Config

dirNegThresh = baselineMedians+dirLevel*SD;            %% AM edited 4/7/15: switcehd -dirLevel to +dirLevel
threshold=repmat(dirNegThresh, rows, 1);            %% AM one unique threshold for each grid space
for i=1:numTraces
    if isempty(find(diff(map.averageMap(stimOnInd:responseOnsetEnd,i)>threshold(stimOnInd:responseOnsetEnd,i))==1));  %% AM 4/71/5 switched <threshold to >threshold  %% with <, says: if trace never moves from superthresh to subthresh
        onset(i)=NaN;
        Minimum(i)=min(map.averageMap(stimOnInd:synEndInd,i));   %%% AM 4/7/15 switched Maximum to Minimum and max to min
        maximum(i)=NaN;     %%% AM 4/7/15 switched minimum to maximum
        maxOnset(i)=NaN;    %%% AM 4/7/15 switched minOnset to maxOnset 
        onset90(i)=NaN;
        onset10(i)=NaN;
        riseTime1090(i)=NaN;
        traceMean(i)=0; % for printing the significant traces TM, comment out if need the whole map
    else        %% AM this segment formerly said: if trace does move from superthresh to subthresh
        onset(i)=min(find(diff(map.averageMap(stimOnInd:responseOnsetEnd,i)>threshold(stimOnInd:responseOnsetEnd,i))==1))/sr;  %%% AM 4/7/15 switched <threshold to >threshold  %% with <, says: find first superthresh-->subthresh crossing, convert from scans to time units
        [Maximum MaxOnset]=max(map.averageMap(stimOnInd:synEndInd,i));  %%% AM 4/7/15 switched Minimum to Maximum, MinOnset to MaxOnset, and min to max %% with min(), says: find negative peak
        Minimum(i)=min(map.averageMap(stimOnInd:synEndInd,i)); %%% AM 4/7/15 switched minimum to maximum and Minimum to Maximum

        % if singleEventEPSCdiscriminator(map.averageMap(stimOnInd:synEndInd,i),onset(i)*sr)  %only analyse riseTime for single component event;
        %     onset90(i)=NaN;
        %     onset10(i)=NaN;
        % else
        onset90(i)= min(find(diff((map.averageMap(stimOnInd:synEndInd,i)>.9*max((map.averageMap(stimOnInd:synEndInd,i))))==1))); %%% AM 4/7/15 switched min((map.averageMap to max((map.averageMap and < to >
        try
            onset10(i)=min(find(diff((map.averageMap(stimOnInd:synEndInd,i)>.1*max((map.averageMap(stimOnInd:synEndInd,i))))==1))); %%% AM 4/7/15 switched min((map.averageMap to max((map.averageMap and < to >
        catch
            onset10(i)=NaN;
        end
        % end
        maximum(i)=Maximum; %%% AM 4/7/15 switched minimum to maximum and Minimum to Maximum
        maxOnset(i)=MaxOnset/sr;  %%% AM 4/7/15 switched minOnset to maxOnset and MinOnset to MaxOnset
        riseTime1090(i)=(onset90(i)-onset10(i))/sr;
        traceMean(i)=mean(map.averageMap(stimOnInd:synEndInd,i)); % comment out it need the whole map TM
    end
%     traceMean(i)=mean(map.averageMap(stimOnInd:synEndInd,i));
    integral(i)= trapz(map.averageMap(stimOnInd:chargeEndInd,i))/sr;

    [a b]=find(map.pattern{1}==i);
    if a==11&&b==8
        iiii =  0;
    end

    mapOnset(a,b)=onset(i);
    mapMaxOnset(a,b)=maxOnset(i);       %%% AM 4/7/15 switched mapMinOnset to mapMaxOnset and minOnset and maxOnset
    mapMax(a,b)=maximum(i);     %%% AM 4/7/15 switched mapMin to mapMax and minimum to maximum
    mapMean(a,b)=traceMean(i);
    mapIntegral(a,b)=integral(i);
    mapRiseTime1090(a,b)=riseTime1090(i);
    mapMinimum(a,b)=Minimum(i);     %%% AM 4/7/15 switched mapMaximum to mapMinimum and Maximum to Minimum
end
map.analysis.xSpacing=map.xSpacing;
map.analysis.ySpacing=map.ySpacing;
map.analysis.onset=mapOnset;
map.analysis.maxOnset=mapMaxOnset;      %%% AM 4/7/15 switched minOnset and maxOnset and mapMinOnset to mapMaxOnset
map.analysis.maximum=mapMax;        %%% AM 4/7/15 switched mapMin to mapMax and map.analysis.minimum to map.analysis.maximum
map.analysis.mean=mapMean;
map.analysis.integral=mapIntegral;
map.analysis.riseTime1090=mapRiseTime1090;
map.analysis.minimum=mapMinimum;    %%% AM 4/7/15 switched mapMaximum to mapMinimum and map.analysis.maximum to map.analysis.minimum
[map.soma1Coordinates(1) map.soma1Coordinates(2)]=somaPositionTransformerMH(map.soma1Coordinates(1), map.soma1Coordinates(2), map.spatialRotation,map.xPatternOffset,map.yPatternOffset);

%Address issue of different size maps: some have 12 columns, others have 8
%or 10.  When <12, add columns of NaN to make the same shape MH20100412

for n=1:size(map.analysis.mean,1)
    nancolumnvector(n)=NaN;
end


%[filename, pathname] = uiputfile(['C:\hooksm\_Cartography\dataMfiles\',map.experimentNumber,'.m'], 'Save data file as');
[filename, pathname] = uiputfile(['E:\HHMI 2011 Oct23 - Dec22\Analysis\Weiguo Data\DataMfiles\',map.experimentNumber,'.m'], 'Save data file as');

fid = fopen(fullfile(pathname, filename),'wt');
fprintf(fid, 'function map = %s\n', map.experimentNumber);
fprintf(fid, '%s\n','%Maps\n');
fprintf(fid, 'map.experimentNumber= \''%s\'';\n', map.experimentNumber);
fprintf(fid, 'map.presynaptic='''';\n');
fprintf(fid, 'map.postsynaptic='''';\n');
fprintf(fid, 'map.hemisphere='''';\n');
fprintf(fid, '%s\n','%--------------------------------------------------------');
fprintf(fid, 'map.distanceToPia= nan;\n');
fprintf(fid, '%s\n','% map.distanceToBarrelTop/Bottom=');
fprintf(fid, 'map.cortexThickness= nan;\n');
fprintf(fid, 'map.yfrac= nan;\n');
fprintf(fid, 'map.layer1Row= nan;\n');
fprintf(fid, '%s\n','% map.distanceToMidline=');
fprintf(fid, '%s\n','% map.GCCToMidline=');
fprintf(fid, '%s\n','%--------------------------------------------------------');
%fprintf(fid, 'map.soma1Coordinates=[ %g %g ]; \n', [map.soma1Coordinates(1)-map.xPatternOffset...
%    map.soma1Coordinates(2)-map.yPatternOffset]); edited to correct soma
%    coordinates for plotting
fprintf(fid, 'map.soma1Coordinates=[ %g %g ]; \n', [map.soma1Coordinates(1)...
    map.soma1Coordinates(2)]);
fprintf(fid, 'map.laserPower= %g ; \n', mean(map.laserPower));
fprintf(fid, 'map.pulseWidth= nan;\n');
fprintf(fid, 'map.xSpacing= %g ; \n', map.xSpacing);
fprintf(fid, 'map.ySpacing= %g ; \n', map.ySpacing);
fprintf(fid, 'map.numberOfMaps= %g ; \n', length(map.laserPower));
fprintf(fid, 'map.analysisWindow= %g ; \n', (synEndInd-stimOnInd)/sr);

fprintf(fid, ['map.mean=[']);
for n=1:size(map.analysis.mean,1)
    fprintf(fid, [num2str(map.analysis.mean(n,:))]);
    fprintf(fid, [';\n']);
end
fprintf(fid, ['];']);
fprintf(fid, ['\n']);

fprintf(fid, ['map.min=[']);
for n=1:size(map.analysis.minimum,1)
    fprintf(fid, [num2str(map.analysis.minimum(n,:))]);
    fprintf(fid, [';\n']);
end
fprintf(fid, ['];']);
fprintf(fid, ['\n']);

fprintf(fid, ['map.max=[']);
for n=1:size(map.analysis.maximum,1)
    fprintf(fid, [num2str(map.analysis.maximum(n,:))]);
    fprintf(fid, [';\n']);
end
fprintf(fid, ['];']);
fprintf(fid, ['\n']);

fprintf(fid, ['map.integral=[']);
for n=1:size(map.analysis.integral,1)
    fprintf(fid, [num2str(map.analysis.integral(n,:))]);
    fprintf(fid, [';\n']);
end
fprintf(fid, ['];']);
fprintf(fid, ['\n']);

fprintf(fid, ['map.onset=[']);
for n=1:size(map.analysis.onset,1)
    fprintf(fid, [num2str(map.analysis.onset(n,:))]);
    fprintf(fid, [';\n']);
end
fprintf(fid, ['];']);
fprintf(fid, ['\n']);

fprintf(fid, ['map.maxOnset=[']);    %%% AM 4/7/15 switched map.minOnset to map.maxOnset
for n=1:size(map.analysis.maxOnset,1)       %%% AM 4/7/15 switched map.analysis.minOnset to map.analysis.maxOnset
    fprintf(fid, [num2str(map.analysis.maxOnset(n,:))]);       %%% AM 4/7/15 switched map.analysis.minOnset to map.analysis.maxOnset
    fprintf(fid, [';\n']);
end
fprintf(fid, ['];']);
fprintf(fid, ['\n']);

fprintf(fid, ['map.riseTime1090=[']);
for n=1:size(map.analysis.riseTime1090,1)
    fprintf(fid, [num2str(map.analysis.riseTime1090(n,:))]);
    fprintf(fid, [';\n']);
end
fprintf(fid, ['];']);
fprintf(fid, ['\n']);

fclose(fid);

mapAnalysisPlotTTXMH_current_clamp(map)

if ~isempty(varargin)       % if plot scale bar was specified
    [handles selectedTraces] = arrayTracesAsInputMap_currentClamp_pickTraces(map,varargin);
else        % if plot scale bar unspecified - defaults to 50mV
    [handles selectedTraces] = arrayTracesAsInputMap_currentClamp_pickTraces(map);
end
