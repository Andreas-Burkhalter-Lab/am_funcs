% ARRAY_PROLONG: generate a fine-grid version of an array (useful for multigrid)
%
% This function is the "inverse" of ARRAY_RESTRICT, and uses
% interpolation to generate a fine-scale version of an array.
%
% A noteworthy feature of this algorithm is that you can generate either
% odd-sized or even-sized dimensions.  Odd sizes are generated by
% interpolating at half-grid positions and copying from on-grid
% positions, as is conventional for the restriction operator.
% Even sizes are generated by interpolating at 1/4 and 3/4
% grid positions (and nowhere else, i.e., there will be no on-grid points
% in the output). This flexibility is useful for real-world cases where
% the finest-scale array may be determined by a piece of hardware (e.g.,
% a camera).  ARRAY_RESTRICT, as the operator-transpose of this function,
% can therefore also work with either odd- or even-sized dimensions.
%
% Syntax:
%   Ap = array_prolong(A,szout)
% where A is the coarse-grid array, and Ap is the fine-grid version of
% the same array.  szout specifies the desired output size; along each
% dimension there are only three choices: n, 2*n-2, and 2*n-1, where n is
% the current size of the given dimension (when you specify n, then the
% given dimension is not brought to a finer grid).
%
%   Ap = array_prolong(A,szout,n_threads)
% where n_threads is an integer specifying the number of threads to use.
%
% See also: ARRAY_RESTRICT.

% Copyright 2009 by Timothy E. Holy
% Implemented as a MEX file for speed
