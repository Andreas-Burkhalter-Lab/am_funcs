function [data] = Rex2Tempo(PATH, FILE)
% function [foo, index, raster, emt, emh, emv] = Tempo2REX(PATH,FILE)
% This function loads the data structures generated by the LoadTEMPOData program
% and outputs matrices in REX format. 
% i.e. eye movements are represented by time entries (emt)
% Eye position as values corresponding to these entries (emh, emv).  Data are zero padded
% Spike times are represented as time entries (raster1, raster2
FILE = 'ben010a'
	PATH = 'Z:\data\REX\Ben\spikes\';
	%PATH = 'Z:\data\REX\Radar\spikes\'
	TEMPO_Defs;
   DArange = 2047; %check these
   Hrange = 50;
   Vrange = 50;
   EyeHertz = 250;		%Temporal resolution of REX eye traces at 250 Hz?
   SpikeHertz = 1000;	%Temporal resolution of REX spike acquisition at 1000 Hz
   
   %first load Tempo Data
   
   foo =[]; emt =[]; raster1 = []; raster2 = []; datindex = []; paradigm = []; emh1 =[]; emv1 =[]; emh2 = []; emv2 = [];
   if (isempty(foo) & exist([PATH,FILE,'.s'])==2)	
	   [foo,paradigm,datindex,raster1]=load_FooIndexRaster(FILE,PATH);
	end
	if (isempty(foo) & exist([PATH,'\\',FILE,'1.s'])==2)
		[foo,paradigm,datindex,raster1]=load_FooIndexRaster([FILE,'1'],PATH);
	end
	if (isempty(raster2) & exist([PATH,'\\',FILE,'2.s'])==2)
		[foo,paradigm,datindex,raster2]=load_FooIndexRaster([FILE,'2'],PATH);
	end
	if (isempty(emt) & exist([PATH,'\\',FILE,'.tim'])==2)
		eval(['load ',PATH,'\\',FILE,'.tim'])
		eval(['emt=',FILE,';'])
	end
   if (isempty(emh1) & exist([PATH,'\\',FILE,'.e1h'])==2)
		eval(['load ',PATH,'\\',FILE,'.e1h'])
		eval(['emh1=',FILE,'./40;'])	
	end
	if (isempty(emv1) & exist([PATH,'\\',FILE,'.e1v'])==2)
		eval(['load ',PATH,'\\',FILE,'.e1v'])
      eval(['emv1=',FILE,'./40;'])
   end   
   if (isempty(emh2) & exist([PATH,'\\',FILE,'.e2h'])==2)
		eval(['load ',PATH,'\\',FILE,'.e2h'])
		eval(['emh2=',FILE,'./40;'])	
	end
	if (isempty(emv2) & exist([PATH,'\\',FILE,'.e2v'])==2)
		eval(['load ',PATH,'\\',FILE,'.e2v'])
      eval(['emv2=',FILE,'./40;'])      
   end

   % get trial info
   num_trials = size(datindex,1);
   
   % rex eye data sampled at 1000
  
   % need to revise because could have more than one spike with same time value
   % get spike data
   for trial = 1: num_trials
      raster = raster1(trial,:);		% get raster for trial
      raster = raster(raster ~=0);	% remove zero padded points
   	data.spike_data(1, raster,trial) = 1;
   end
   
   % get eye data check index numbers for left and right eye
  	for trial = 1:num_trials
     	data.eye_data(1, :, trial) = emh1(trial,:)*DArange/Hrange;
   	data.eye_data(2, :, trial) = emv1(trial,:)*DArange/Vrange;
		data.eye_data(3, :, trial) = emh2(trial,:)*DArange/Hrange;
 		data.eye_data(4, :, trial) = emv2(trial,:)*DArange/Vrange;
	end
   
   % write dots params
   for trial = 1:num_trials
      data.dots_params(1,:,1) = foo(:,2)'; % c direction 
      data.dots_params(2,:,1) = foo(:,4)'/10; % c speed
      data.dots_params(3,:,1) = foo(:,1)'/10; % c coherence      
      data.dots_params(4,:,1) = foo(:,5)'/100; % c hdisp
   	data.targ_params(5,:,1) = foo(:,6)'/100; % c vdisp
      data.dots_params(6,:,1) = foo(:,7)'/10; % c bin corr
      data.dots_params(7,:,1) = zeros(1,size(data.dots_params, 2));	% grad mag
 		data.dots_params(8,:,1) = zeros(1, size(data.dots_params, 2));	% grad angle

		%(sqrt((data.dots_params(15,:,1)).^2 + data.dots_params(16,:,1).^2) )' = foo(:,3); % c diameter
        
   	% surround = patch2
   	data.targ_params(1,:,2) = foo(:,9)'; % s dir
   	data.dots_params(2,:,2) = foo(:,11)'; % s speed
   	data.dots_params(3,:,2) = foo(:,8)'; % s coh
   	data.targ_params(4,:,2) = foo(:,12)'; % s hdisp
 		data.targ_params(5,:,2) = foo(:,13)'; % s vdisp
   	data.dots_params(6,:,2) = foo(:,14)'; % s bin corr
   	%sqrt((data.dots_params(15,:,2)).^2 + data.dots_params(16,:,2).^2) ) = foo(:,10)'; % s diameter
   end
   
   %looks like I haven't included the generation of a database for events
   for trial = 1:num_trials
      
	  % data.event_data(1,events,trial) =  
   end
   
% Generate index matrix for event times  
	for trial = 1:num_trials
   	% FP On
      if datindex(trial,1) > 1
      	data.event_data(1,datindex(trial,1),trial) = 2;
      end
      % In fix window
      if datindex(trial,2) > 1
         data.event_data(1,datindex(trial,2),trial) = 3;
      end  
      % ST on
      if datindex(trial,3) > 1
         data.event_data(1,datindex(trial,3),trial) = 4;
      end
      % ST off
      if datindex(trial,4) > 1
         data.event_data(1,datindex(trial,4),trial) = 5;
      end
		% Trg On
      if datindex(trial,5) > 1
         data.event_data(1,datindex(trial,3),trial) = 6;
      end
   end
   
   % write some header info
   data.htb_header{SPIKE_DB}.skip = 1;
   data.htb_header{SPIKE_DB}.speed_units = 100000;
	data.htb_header{SPIKE_DB}.speed = 100;
 	data.htb_header{EVENT_DB}.skip = 1;
   data.htb_header{EVENT_DB}.speed_units = 100000;
	data.htb_header{EVENT_DB}.speed = 100;
  	HDispTuningCurve(data, 1, '', 1, 4,5, 1, num_trials, 0, 0, PATH, FILE);


