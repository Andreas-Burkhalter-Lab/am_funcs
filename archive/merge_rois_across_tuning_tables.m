%%%% merge_rois_across_tuning_tables
% manually pick rois from tables generated by get_tuning_curves to merge
% updated 4/12/18


mergedata.tuningstruct{1} = r;
mergedata.tuningstruct{2} = q;

tuningtable{1} = mergedata.tuningstruct{1}.tuning;
tuningtable{2} = mergedata.tuningstruct{2}.tuning; 

% % closestmatch = dsearchn(tuningtable1.centeryx, tuningtable2.centeryx);

meanim{1} = mergedata.tuningstruct{1}.meanImage_ant_up;
meanim{2} = mergedata.tuningstruct{2}.meanImage_ant_up;
roiOutlines{1} = NaN(size(meanim{2}));
roiOutlines{2} = NaN(size(meanim{2}));
nrois(1) = height(tuningtable{1});
nrois(2) = height(tuningtable{2});
for j = [1 2]
    subplot(2,2,j)
    imagesc(meanim{j})
    hold on
    for i = 1:nrois(j)
        thisoutline = bwboundaries(full(tuningtable{j}.cellimage{i}));
        thisoutline = thisoutline{:};
%         thisoutlineinds = sub2ind(size(meanim{j}),thisoutline(:,1),thisoutline(:,2));
        scatter(thisoutline(:,2),thisoutline(:,1),'b','.')
    end
end
    

%%%%% top = images of meanimage with cell outlines, bot = traces from cell;
%%%%% while loop, ginput for right and left, highlight clicked rois, ask to
%%%%% confirm if same; if yes, add chosen match to table.... color outlines
%%%%% red if already matched

%%%% also; use cpselect points from sftf to warp orient